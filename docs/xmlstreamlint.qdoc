/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page xmlstreamlint
    \example xmlstreamlint
    \title XML Stream Lint Example

    \section1 Description

    The XML Stream Lint example provides a simple UI to select an XML file that
    gets validated.

    \image xmlstreamlint-example.png

    The specified file is parsed using an QXmlStreamReader object and written
    to a QByteArray using an QXmlStreamWriter object. If the file
    does not contain a well-formed XML document or the use of namespaces in
    the document is incorrect, a description of the error signaled to the UI.

    \section1 Basic Operation

    Reading XML is handled by an instance of the QXmlStreamReader class, which
    operates on the input file object; writing is handled by an instance of
    QXmlStreamWriter operating on the output buffer object:

    \snippet xmlstreamlint/src/xmlstreamlint.cpp 0

    The work of parsing and rewriting the XML is done in a while loop, and is
    driven by input from the reader:

    \snippet xmlstreamlint/src/xmlstreamlint.cpp 1

    If more input is available, the next token from the input file is read
    and parsed. If an error occurred, information is signaled to the UI.

    \snippet xmlstreamlint/src/xmlstreamlint.cpp 2

    For valid input, the writer is fed the current token from the reader,
    and this is written to the output buffer that was specified when it was
    constructed.

    When there is no more input, the loop terminates, and the UI is informed about
    the result and the output.
*/
